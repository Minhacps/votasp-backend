version: 2

nodejs_tests: &nodejs_tests
  docker:
    - image: circleci/node
  steps:
    - checkout

    - run:
        name: install dependencies
        command: |
          cd ${CIRCLE_JOB%_*}
          npm install

    - run:
        name: Run tests
        command: |
          cd ${CIRCLE_JOB%_*}
          npm test

generic_build: &generic_build
    docker:
      - image: protocool/rancher-circleci
    steps:
      - checkout

      - setup_remote_docker

      - run:
          name: Build image
          command: |
            cd ${CIRCLE_JOB%_*}
            export IMAGE_NAME=$(echo votasp/${CIRCLE_JOB%_*} | tr - _)
            docker build -t $IMAGE_NAME:$CIRCLE_BUILD_NUM -t $IMAGE_NAME:latest .
      - run:
          name: Deploy to docker hub
          command: |
            cd ${CIRCLE_JOB%_*}
            export IMAGE_NAME=$(echo votasp/${CIRCLE_JOB%_*} | tr - _)
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push $IMAGE_NAME:$CIRCLE_BUILD_NUM
            docker push $IMAGE_NAME:latest
      - run:
          name: Deploy to rancher
          command: |
            cd ${CIRCLE_JOB%_*}
            sed -i "s/\$version/$CIRCLE_BUILD_NUM/g" docker-compose.yml
            rancher-compose \
              --url http://rancher.votasp.org.br \
              --access-key $RANCHER_ACCESS_KEY \
              --secret-key $RANCHER_SECRET_KEY \
              -p back-end \
              --file docker-compose.yml \
              up -u -p -c -d

jobs:
  api-answers_tests:
    <<: *nodejs_tests
  api-answers_build:
    <<: *generic_build

  #api-questions_tests:
    #<<: *nodejs_tests
  api-questions_build:
    <<: *generic_build

workflows:
  version: 2
  test_and_deploy_api_answers:
    jobs:
      - api-answers_tests
      - api-answers_build:
          requires:
            - api-answers_tests
          filters:
            branches:
              only:
                - api-questions-deploy

  test_and_deploy_api_questions:
    jobs:
      #- api-questions_tests
      - api-questions_build:
          #requires:
            #- api-questions_tests
          filters:
            branches:
              only:
                - api-questions-deploy
