http:
  port: 80
serviceEndpoints:
  questions-service:
    url: 'http://api-questions'
  answers-service:
    url: 'http://api-answers'

apiEndpoints:
  questions-api:
    host: ${API_HOST}
    paths: /questions/*
  answers-api:
    host: ${API_HOST}
    paths: /answers/*
  public-answers-api:
    host: ${API_HOST}
    paths: /public-answers/*
  matcher-api:
    host: ${API_HOST}
    paths: /matcher/*
policies:
  - jwt
  - proxy
  - terminate

pipelines:
  questions:
    apiEndpoints:
      - questions-api
    policies:
      - proxy:
        - action:
            serviceEndpoint: questions-service
  public-answers:
    apiEndpoints:
      - public-answers-api
    policies:
      - terminate:
        -
          action:
            statusCode: 418
            message: I'm a teapot
  answers:
    apiEndpoints:
      - answers-api
    policies:
      - jwt:
        - action:
            secretOrPublicKeyFile: config/pubKey.pem
            checkCredentialExistence: false
      - proxy:
        - action:
            serviceEndpoint: answers-service
  matcher:
    apiEndpoints:
      - matcher-api
    policies:
      - jwt:
        - action:
            secretOrPublicKeyFile: config/pubKey.pem
            checkCredentialExistence: false
      - terminate:
        -
          action:
            statusCode: 418
            message: I'm a teapot
